generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  name         String?
  passwordHash String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  watchEntries WatchEntry[]
  chatMessages ChatMessage[]
}

model Movie {
  id          String   @id @default(cuid())
  title       String
  year        Int?
  imdbId      String?  @unique(map: "Movie_imdbId_key")
  tmdbId      Int?     @unique(map: "Movie_tmdbId_key")
  poster      String?
  genre       Json
  director    String?
  actors      Json
  plot        String?
  runtime     Int?
  imdbRating  Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  watchEntries WatchEntry[]
}

model WatchEntry {
  id            String   @id @default(cuid())
  movieId       String
  watchDate     DateTime
  personalRating Int?
  personalNotes String?
  mood          String?
  location      String?
  rewatched     Boolean  @default(false)
  createdAt     DateTime @default(now())
  
  movie Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)
  
  userId         String
  user           User           @relation(fields: [userId], references: [id])
  
  @@unique([movieId, watchDate, userId])
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  role      String
  context   Json?
  createdAt DateTime @default(now())
  userId         String
  user           User           @relation(fields: [userId], references: [id])
}